From ecad3406146e396b50b284376f6d8a615c3b0add Mon Sep 17 00:00:00 2001
From: Sugar Zhang <sugar.zhang@rock-chips.com>
Date: Mon, 7 Mar 2022 18:14:48 +0800
Subject: [PATCH 86/94] drm/bridge: synopsys: dw-hdmi-qp: Fix channel status

* LPCM: BPCUV insertion by hw
* NLPCM/HBR: BPCUV insertion from stream

when BPCUV is from stream, we should not enable hw channel
status override which will replace CS with the hw one.
This fixes DD+ bitstream.

when BPCUV generated from HW, PBIT_FORCE_EN should be set
for Parity bit calculated internally.
This fixes no sound on some display devices.

Signed-off-by: Sugar Zhang <sugar.zhang@rock-chips.com>
Change-Id: I3aa0390d9dd7d217853394c74576749c36b84720
Signed-off-by: Detlev Casanova <detlev.casanova@collabora.com>

Gbp-Pq: Name 0167-drm-bridge-synopsys-dw-hdmi-qp-Fix-channel-status.patch
---
 .../gpu/drm/bridge/synopsys/dw-hdmi-qp-i2s-audio.c  |  5 ++++-
 drivers/gpu/drm/bridge/synopsys/dw-hdmi-qp.c        | 13 ++++++++++---
 include/drm/bridge/dw_hdmi.h                        |  3 ++-
 3 files changed, 16 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/bridge/synopsys/dw-hdmi-qp-i2s-audio.c b/drivers/gpu/drm/bridge/synopsys/dw-hdmi-qp-i2s-audio.c
index fc1208a27..e262bdca5 100644
--- a/drivers/gpu/drm/bridge/synopsys/dw-hdmi-qp-i2s-audio.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-hdmi-qp-i2s-audio.c
@@ -56,6 +56,7 @@ static int dw_hdmi_qp_i2s_hw_params(struct device *dev, void *data,
 	struct dw_hdmi_qp_i2s_audio_data *audio = data;
 	struct dw_hdmi_qp *hdmi = audio->hdmi;
 	u32 conf0 = 0;
+	bool ref2stream = false;
 
 	if (is_dw_hdmi_qp_clk_off(audio))
 		return 0;
@@ -100,9 +101,11 @@ static int dw_hdmi_qp_i2s_hw_params(struct device *dev, void *data,
 	case SNDRV_PCM_FORMAT_IEC958_SUBFRAME_LE:
 		conf0 = (hparms->channels == 8) ? AUD_HBR : AUD_ASP;
 		conf0 |= I2S_BPCUV_RCV_EN;
+		ref2stream = true;
 		break;
 	default:
 		conf0 = AUD_ASP | I2S_BPCUV_RCV_DIS;
+		ref2stream = false;
 		break;
 	}
 
@@ -114,7 +117,7 @@ static int dw_hdmi_qp_i2s_hw_params(struct device *dev, void *data,
 		 AUDIO_INTERFACE_CONFIG0);
 
 	dw_hdmi_qp_set_sample_rate(hdmi, hparms->sample_rate);
-	dw_hdmi_qp_set_channel_status(hdmi, hparms->iec.status);
+	dw_hdmi_qp_set_channel_status(hdmi, hparms->iec.status, ref2stream);
 	dw_hdmi_qp_set_channel_count(hdmi, hparms->channels);
 	dw_hdmi_qp_set_channel_allocation(hdmi, hparms->cea.channel_allocation);
 	dw_hdmi_qp_set_audio_infoframe(hdmi);
diff --git a/drivers/gpu/drm/bridge/synopsys/dw-hdmi-qp.c b/drivers/gpu/drm/bridge/synopsys/dw-hdmi-qp.c
index a5d7ff0b6..72f43fb3d 100644
--- a/drivers/gpu/drm/bridge/synopsys/dw-hdmi-qp.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-hdmi-qp.c
@@ -277,7 +277,7 @@ static unsigned int hdmi_find_n(struct dw_hdmi_qp *hdmi, unsigned long pixel_clk
  * (for S/PDIF interface this information comes from the stream).
  */
 void dw_hdmi_qp_set_channel_status(struct dw_hdmi_qp *hdmi,
-				   u8 *channel_status)
+				   u8 *channel_status, bool ref2stream)
 {
 	mutex_lock(&hdmi->audio_mutex);
 	if (!hdmi->dclk_en) {
@@ -288,8 +288,15 @@ void dw_hdmi_qp_set_channel_status(struct dw_hdmi_qp *hdmi,
 	/* Set channel status */
 	hdmi_writel(hdmi, channel_status[3] | (channel_status[4] << 8),
 		    AUDPKT_CHSTATUS_OVR1);
-	hdmi_modb(hdmi, AUDPKT_CHSTATUS_OVR_EN,
-		  AUDPKT_CHSTATUS_OVR_EN_MASK, AUDPKT_CONTROL0);
+
+	if (ref2stream)
+		hdmi_modb(hdmi, 0,
+			  AUDPKT_PBIT_FORCE_EN_MASK | AUDPKT_CHSTATUS_OVR_EN_MASK,
+			  AUDPKT_CONTROL0);
+	else
+		hdmi_modb(hdmi, AUDPKT_PBIT_FORCE_EN | AUDPKT_CHSTATUS_OVR_EN,
+			  AUDPKT_PBIT_FORCE_EN_MASK | AUDPKT_CHSTATUS_OVR_EN_MASK,
+			  AUDPKT_CONTROL0);
 
 	mutex_unlock(&hdmi->audio_mutex);
 }
diff --git a/include/drm/bridge/dw_hdmi.h b/include/drm/bridge/dw_hdmi.h
index b593965d1..2b98878d0 100644
--- a/include/drm/bridge/dw_hdmi.h
+++ b/include/drm/bridge/dw_hdmi.h
@@ -223,7 +223,8 @@ void dw_hdmi_qp_set_cec_adap(struct dw_hdmi_qp *hdmi, struct cec_adapter *adap);
 int dw_hdmi_qp_set_earc(struct dw_hdmi_qp *hdmi);
 void dw_hdmi_qp_set_sample_rate(struct dw_hdmi_qp *hdmi, unsigned int rate);
 void dw_hdmi_qp_set_channel_count(struct dw_hdmi_qp *hdmi, unsigned int cnt);
-void dw_hdmi_qp_set_channel_status(struct dw_hdmi_qp *hdmi, u8 *channel_status);
+void dw_hdmi_qp_set_channel_status(struct dw_hdmi_qp *hdmi, u8 *channel_status,
+				   bool ref2stream);
 void dw_hdmi_qp_set_channel_allocation(struct dw_hdmi_qp *hdmi, unsigned int ca);
 void dw_hdmi_qp_set_audio_infoframe(struct dw_hdmi_qp *hdmi);
 void dw_hdmi_qp_audio_enable(struct dw_hdmi_qp *hdmi);
-- 
2.46.0

