
code developed by Jernej Skrabec <jernej.skrabec@gmail.com>

diff --speed-large-files --no-dereference --minimal -Naur u-boot-2025.01-rc2/arch/arm/mach-sunxi/dram_sun50i_h616.c u-boot-2025.01-rc2/arch/arm/mach-sunxi/dram_sun50i_h616.c
--- u-boot-2025.01-rc2/arch/arm/mach-sunxi/dram_sun50i_h616.c	2025-01-12 20:46:39.077564949 +0100
+++ u-boot-2025.01-rc2/arch/arm/mach-sunxi/dram_sun50i_h616.c	2025-01-12 20:45:52.847563711 +0100
@@ -1368,6 +1360,39 @@
 	panic("This DRAM setup is currently not supported.\n");
 }
 
+static bool compare_mem(ulong offset)
+{
+	unsigned int i;
+	u32 *ptr, val;
+
+	ptr = (u32*)CFG_SYS_SDRAM_BASE;
+	for (i = 0; i < 16; ptr++, i++) {
+		if (i & 1)
+			val = ~(ulong)ptr;
+		else
+			val = (ulong)ptr;
+		if (val != *(ptr + offset / 4))
+			return false;
+	}
+
+	return true;
+}
+
+static void init_mem(void)
+{
+	unsigned int i;
+	u32 *ptr, val;
+
+	ptr = (u32*)CFG_SYS_SDRAM_BASE;
+	for (i = 0; i < 16; ptr++, i++) {
+		if (i & 1)
+			val = ~(ulong)ptr;
+		else
+			val = (ulong)ptr;
+		writel(val, ptr);
+	}
+}
+
 static void mctl_auto_detect_dram_size(const struct dram_para *para,
 				       struct dram_config *config)
 {
@@ -1378,23 +1403,27 @@
 	config->rows = 13;
 	mctl_core_init(para, config);
 
+	init_mem();
+
 	shift = config->bus_full_width + 1;
 
 	/* detect column address bits */
 	for (config->cols = 8; config->cols < 11; config->cols++) {
-		if (mctl_mem_matches(1ULL << (config->cols + shift)))
+		if (compare_mem(1ULL << (config->cols + shift)))
 			break;
 	}
 	debug("detected %u columns\n", config->cols);
 
 	/* reconfigure to make sure that all active rows are accessible */
-	config->rows = 18;
+	config->rows = 17;
 	mctl_core_init(para, config);
 
+	init_mem();
+
 	/* detect row address bits */
-	shift = config->bus_full_width + 4 + config->cols;
-	for (config->rows = 13; config->rows < 18; config->rows++) {
-		if (mctl_mem_matches(1ULL << (config->rows + shift)))
+	shift = config->bus_full_width + 1 + 3 + config->cols;
+	for (config->rows = 13; config->rows < 17; config->rows++) {
+		if (compare_mem(1ULL << (config->rows + shift)))
 			break;
 	}
 	debug("detected %u rows\n", config->rows);
